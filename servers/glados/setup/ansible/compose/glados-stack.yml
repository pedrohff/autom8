version: "3"

networks:
  metrics:
    external: false
  host:
    external: true

services:

  influxdb:
    image: arm32v7/influxdb:latest
    container_name: influxdb
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - $HOME/docker-volume/influxdb/data:/var/lib/influxdb
      - $HOME/docker-volume/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - $HOME/docker-volume/influxdb/init:/docker-entrypoint-initdb.d
    environment:
      - INFLUXDB_ADMIN_USER={{influxUsername}}
      - INFLUXDB_ADMIN_PASSWORD={{influxPassword}}

  telegraf:
    image: telegraf:latest
    restart: always
    container_name: telegraf
    volumes:
      - $HOME/docker-volume/influxdb/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  # kapacitor:
  #   image: kapacitor
  #   environment:
  #     KAPACITOR_HOSTNAME: kapacitor
  #     KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
  #   volumes:
  #     - $HOME/docker-volume/kapacitor:/var/lib/kapacitor
  #   links:
  #     - influxdb
  #   ports:
  #     - "9092:9092"


  chronograf:
    container_name: chronograf
    restart: always
    image: chronograf:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chronograf.rule=Host(`chronograf.{{dynuHost}}`)"
      - "traefik.http.routers.chronograf.entrypoints=websecure"
      - "traefik.http.services.chronograf.loadbalancer.server.port=8888"
      - "traefik.http.routers.chronograf.service=chronograf"
      - "traefik.http.routers.chronograf.tls=true"
      - "traefik.http.routers.chronograf.tls.certresolver=production"
      - 'traefik.http.routers.chronograf.middlewares=authelia@docker'
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME={{influxUsername}}
      - INFLUXDB_PASSWORD={{influxPassword}}

  portainer:
    container_name: portainer
    restart: always
    image: portainer/portainer-ce:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/docker-volume/portainer/data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.{{dynuHost}}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=production"
      - 'traefik.http.routers.portainer.middlewares=authelia@docker'
  
  mosquitto:
    container_name: mosquitto
    restart: always
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
    volumes:
      - $HOME/docker-volume/mosquitto:/mosquitto/

  traefik:
    environment:
      - DYNU_API_KEY={{dynuapikey}}
    volumes:
      - $HOME/docker-volume/traefik:/etc/traefik
      - $HOME/docker-volume/traefik-ssl-certs:/ssl-certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    image: traefik:v2.9
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"

  authelia:
    image: authelia/authelia
    container_name: authelia
    volumes:
      - $HOME/docker-volume/authelia:/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.{{dynuHost}}`)'
      - 'traefik.http.routers.authelia.entrypoints=websecure'
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"
      - "traefik.http.routers.authelia.service=authelia"
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.certresolver=production'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.{{dynuHost}}'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email,Upgrade,Connection'
    expose:
      - 9091
    restart: unless-stopped
    healthcheck:
      disable: true
    environment:
      - TZ=America/Sao_Paulo


  kuma:
    image: "louislam/uptime-kuma:1"
    container_name: kuma
    volumes:
      - $HOME/docker-volume/uptime-kuma:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uptime-kuma.rule=Host(`kuma.{{dynuHost}}`)"
      - "traefik.http.routers.uptime-kuma.entrypoints=websecure"
      - "traefik.http.routers.uptime-kuma.tls=true"
      - "traefik.http.routers.uptime-kuma.tls.certresolver=production"
      - "traefik.http.services.uptime-kuma.loadBalancer.server.port=3001"

 
#https://raw.githubusercontent.com/EddieDSuza/techwitheddie/main/UltimateHomekitHub
#https://blog.anoff.io/2020-12-run-influx-on-raspi-docker-compose/